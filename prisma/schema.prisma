datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model GiftItem {
  id          String    @id @default(uuid())
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  name        String
  price       String?
  notes       String?
  recipient   User      @relation("ReceivingItems", fields: [recipientId], references: [id])
  recipientId String
  giftedBy    User?     @relation("GiftingItems", fields: [giftedById], references: [id])
  giftedById  String?
  link        String?
  purchased   Boolean   @default(false)
  idea        Boolean   @default(false)
  ideaLink    GiftItem? @relation("IdeaLink", fields: [ideaLinkId], references: [id])
  ideaLinkId  String?   @unique
  ideaLink2   GiftItem? @relation("IdeaLink")
  groups      Group[]
}

enum Group {
  BENJAMINS
  HAUGEN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String     @id @default(uuid())
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?  @updatedAt
  name         String     @unique
  password     String
  items        GiftItem[] @relation("ReceivingItems")
  giftingItems GiftItem[] @relation("GiftingItems")
  partner      User?      @relation("Partner", fields: [partnerId], references: [id])
  partnerId    String?    @unique
  partner2     User?      @relation("Partner")
  groups       Group[]
  accounts     Account[]
  sessions     Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
